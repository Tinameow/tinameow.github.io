<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Experience as a Data Engineer</title>
    <link href="/2022/07/21/Experience-data_engineer/"/>
    <url>/2022/07/21/Experience-data_engineer/</url>
    
    <content type="html"><![CDATA[<h2 id="工作内容"><a href="#工作内容" class="headerlink" title="工作内容"></a>工作内容</h2><h3 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h3><p>清理整合各种业务系统的数据，根据业务含义设计整合成新的表，以便于数据分析。</p><p>整合数据：Integrate data from different sources. Store SQL procedures to run automatically. 需要确认业务逻辑和考虑业务需求。</p><p>保障数据一致性和准确性：在系统中可能有一些bug导致的数据，可以在数仓兜底修复数据。需要设计一些校验，基础的比如主键、码值的校验，针对交易场景还有一些金额的校验，比如放还款和净增的强校验，一些限制条件的弱校验，比如状态和金额不匹配之类的。</p><p>保障数据产出：可能会因为资源问题，上游业务变更，代码bug，甚至框架bug之类的问题导致数据没能产出或延迟，都需要数开解决，通常是凌晨跑前一天的数据，所以问题一般也都需要凌晨及时告警和解决。</p><p>提供咨询服务：作为连接系统业务和数据分析的桥梁，经常需要解答一些问题，比如某个场景下最合适的表和字段，不同表之间的差异，某些表的使用方法，甚至一些sql的优化等。</p><h3 id="资产治理"><a href="#资产治理" class="headerlink" title="资产治理"></a>资产治理</h3><h3 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h3><p>代码主要是写sql，涉及少量的java，python。Excel也比较常用（对于离线数仓的建模来说基本是会sql就可以了，重点还是通过理解业务来设计数据的清理流程和存储结构。当然对一些组件有了解，理解一下底层原理对调优会有帮助。</p><h2 id="工作体验"><a href="#工作体验" class="headerlink" title="工作体验"></a>工作体验</h2><p>总体来说，我觉得今年比去年更“好”了，信息同步机制更完善了（通过OA），校验也加了不少，夜间巡检频率也降低了，对于数据的使用者来说，文档和注释也更多了，应该更好上手了。</p><p>刚开始不熟悉各种表和工作流程比较痛苦，取数感觉天天迷失在数据的海洋里，遇到一些问题也不太清楚怎么处理。熟悉之后取数很顺手，就算有问题的也大概知道怎么解决，感觉工作反而变得更简单了。同时感觉工作的自由度还是挺高的，发现的问题都可以尝试解决，感觉同事也都很乐于助人（感恩</p><p>刚做起来就放弃也挺遗憾的，我觉得还有很多内容没有尝试过，并且对工作的感觉比起去年更好了，工作好像也越来越有趣了。可能是太慢热了吧，今年年初的时候还觉得没啥意思。或许之后可以多问问别人觉得工作有意思的点！</p><h3 id="快乐"><a href="#快乐" class="headerlink" title="快乐"></a>快乐</h3><ul><li>开发设计也比较有趣而且不难也不算复杂，sql又简单产出快，即时反馈很爽。</li><li>治理整理数据也挺好的（强迫症+洁癖的快乐）。</li><li>咨询能帮到别人感觉挺不错的。</li></ul><h3 id="一般"><a href="#一般" class="headerlink" title="一般"></a>一般</h3><ul><li>感觉主要还是了解业务逻辑和业务诉求，不然会很迷茫。上手有些困难，不了解的东西有些多，有些“知道但不理解”的感觉。</li><li>每个改动都需要非常仔细地评估，事后再改动通常会比较困难&#x2F;麻烦。</li><li>咨询有时会打断思路</li><li>治理牵扯多，改起来麻烦，然后因为优先级低，不好推动，并且进展缓慢。</li><li>面向公司内部，压力比较小，但同时几乎全公司都会查询使用数仓的数据。</li></ul><h3 id="讨厌"><a href="#讨厌" class="headerlink" title="讨厌"></a>讨厌</h3><ul><li>半夜运维：刚开始频率比较高，感觉每周至少一次（正值刚接手+业务变更+资源问题）；近离职的几个月大概每月2~3次。我的话一般是凌晨三四点接到电话。</li></ul><h2 id="经验总结"><a href="#经验总结" class="headerlink" title="经验总结"></a>经验总结</h2><h3 id="通用经验"><a href="#通用经验" class="headerlink" title="通用经验"></a>通用经验</h3><ul><li><p>Think one step more确认最终问题 尽量避免xy问题 要做什么？为什么？怎么做？做完之后呢？避免重复的问题</p></li><li><p>产出成果 记录&amp;表述</p></li></ul><p>人很容易失忆，自己都不记得之前做了什么，更别说让别人记得了！如果有必要的话需要主动提起！需要记录一下，事情+作用&#x2F;impact</p><ul><li><p>问题：那些能改变 哪些不能 怎么改 谁来改 </p></li><li><p>推进：推动别人前要先自己搞明白流程</p></li><li><p>会议：做好准备，明确目的，尽量快得发现疑惑的点并确定，如果能先找出问题会议上再讨论提出的解决方案就更好了。可能需要事先构想解决方案，大的方案好想，可能需要更关注字段含义等细节。（不过很细的问题也可以之后再问啦。那么还有就是摸清每个人都是什么作用，诉求都是什么。记录一下结论！</p></li><li><p>比起简洁 尽量努力把话讲清楚 </p></li><li><p>排序 工作优先级</p></li></ul><h3 id="SQL经验"><a href="#SQL经验" class="headerlink" title="SQL经验"></a>SQL经验</h3><h4 id="数据检查"><a href="#数据检查" class="headerlink" title="数据检查"></a>数据检查</h4><ul><li>主键唯一    ：“主键”是唯一的吗？如果根据“主键”汇总，其他非聚合项的取值是最大最小？求和？</li><li>分布    ：空值占比？各个码值占比？数据倾斜？</li><li>关联关系：一对一？一对多？多对多？如果不是一对一，是选择膨胀还是通过什么条件筛选整合呢？</li><li>默认值    ：空值怎么处理？默认值是什么？</li><li>每个字段的含义和逻辑: 是否有必要囊括？</li></ul><p>针对优化&#x2F;刷数：</p><ul><li>影响？</li></ul><h4 id="优化思路"><a href="#优化思路" class="headerlink" title="优化思路"></a>优化思路</h4><p>优化业务逻辑&gt;优化代码&gt;&#x3D;优化资源配置</p><h5 id="优化业务逻辑"><a href="#优化业务逻辑" class="headerlink" title="优化业务逻辑"></a>优化业务逻辑</h5><ul><li>筛选数据，减少不必要的数据和不必要的关联</li><li>根据新的业务逻辑更新代码，比如不再依赖停止更新了的表</li></ul><h5 id="优化代码"><a href="#优化代码" class="headerlink" title="优化代码"></a>优化代码</h5><ul><li>减少读表<ul><li>限制分区</li><li>减少读取大表的次数</li><li>先过滤后关联</li><li>分开处理 取默认值的数据 和 需要加工的数据</li></ul></li><li>减少写表<ul><li>临时表 vs 子查询</li></ul></li><li>避免数据倾斜<ul><li>避免使用distinct，distinct只有一个reducer</li><li>避免关联字段倾斜，比如空值，可以用rand()处理</li><li>distributed by rand()</li><li>窗口函数排序</li></ul></li><li>取第一行可用取最大值&#x2F;最小值代替</li></ul><h5 id="优化资源配置"><a href="#优化资源配置" class="headerlink" title="优化资源配置"></a>优化资源配置</h5><h3 id="搬砖小技巧"><a href="#搬砖小技巧" class="headerlink" title="搬砖小技巧"></a>搬砖小技巧</h3><ul><li>Excel 好用！</li><li>记录常用的queries，然后快乐copy&#x2F;paste~</li><li>重复的工作想办法自动化</li></ul><h2 id="讨论"><a href="#讨论" class="headerlink" title="讨论"></a>讨论</h2><p>一个矛盾的地方：我想象中的规范的流程，必然会使效率降低，也必然会让每个人更拧螺丝以及更可替换？会因为流程更复杂而使改变变得更艰难，自由度也可能下降？</p><p>如果要做得更好需要更多得发掘业务的需求以及了解业务流程，不过要怎么做呢？</p><p>凌晨巡检是很难受，也算是离职的原因之一，但也并不是因为我是女生，希望不要因此在工作中边缘化女性。不过话说回来，如何降低频率呢？公司应该设立什么样的制度呢？</p><p>虽然DE确实有有趣的地方，但如果要完全避免，可能还是需要转行？转SDE的话，on call好像也是常有的事，不过也看业务。转DS，我觉得数据分析好像又不如开发有意思？不过也都依赖于业务场景吧，不同domain或许也都不同？</p>]]></content>
    
    
    <categories>
      
      <category>Experience</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Big Data</tag>
      
      <tag>Work</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
